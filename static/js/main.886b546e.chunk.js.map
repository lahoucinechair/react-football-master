{"version":3,"sources":["img/LaLiga.png","img/Bundesliga.png","img/Eredivisie.png","img/Ligue1.png","img/PremierLeague.png","img/SerieA.png","components/Header.js","components/Button.js","components/Row.js","components/TableBody.js","components/LeagueInfo.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","react_default","a","createElement","children","Button","onClick","handleClick","data-leagueid","leagueId","text","Row","className","position","src","crestURI","alt","teamName","playedGames","wins","draws","losses","goalsFor","goalsAgainst","goalDifference","points","TableBody","title","LeagueInfo","imgSrc","leagueCaption","Bundesliga","Eredivisie","LaLiga","Ligue1","PremierLeague","SerieA","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","leagueName","rows","leagues","La Liga","Premier League","Ligue 1","Serie A","buttons","handleLeagueClick","bind","assertThisInitialized","e","_this2","newId","target","getAttribute","setState","fetchData","_this3","fetch","headers","X-Auth-Token","then","response","json","responseJson","standings","table","map","item","index","won","draw","lost","_item$team","team","crestUrl","name","push","components_Row","key","competition","catch","error","console","components_Button","components_Header","components_LeagueInfo","components_TableBody","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.886b546e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LaLiga.2be24290.png\";","module.exports = __webpack_public_path__ + \"static/media/Bundesliga.3e055fb4.png\";","module.exports = __webpack_public_path__ + \"static/media/Eredivisie.07239886.png\";","module.exports = __webpack_public_path__ + \"static/media/Ligue1.4b2af31f.png\";","module.exports = __webpack_public_path__ + \"static/media/PremierLeague.2ea36f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/SerieA.3ee74dc2.png\";","import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <header>\n            {props.children}\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Button = (props) => {\n    return (\n        <button onClick={props.handleClick} data-leagueid={props.leagueId}>\n            {props.text}\n        </button>\n    );\n};\n\nexport default Button;","import React from 'react';\n\nconst Row = (props) => {\n    return (\n        <tr>\n            <td className=\"team-position\">\n                {props.position}\n            </td>\n            <td className=\"team-name\">\n                <div className=\"crest\">\n                    <img src={props.crestURI} alt=\"\"/>\n                </div>\n                <span>{props.teamName}</span>\n            </td>\n            <td>\n                {props.playedGames}\n            </td>\n            <td>\n                {props.wins}\n            </td>\n            <td>\n                {props.draws}\n            </td>\n            <td>\n                {props.losses}\n            </td>\n            <td>\n                {props.goalsFor}\n            </td>\n            <td>\n                {props.goalsAgainst}\n            </td>\n            <td>\n                {props.goalDifference}\n            </td>\n            <td className=\"team-points\">\n                {props.points}\n            </td>\n        </tr>\n    );\n};\n\nexport default Row;","import React from 'react'\n\nconst TableBody = (props) => {\n    return (\n        <table className=\"standings\">\n            <tbody>\n                <tr className=\"table-head\">\n                    <td className=\"team-position\">\n                        #\n                    </td>\n                    <td className=\"team-name\">\n                        Team\n                    </td>\n                    <td title=\"Matches played\">\n                        MP\n                    </td>\n                    <td title=\"Wins\">\n                        W\n                    </td>\n                    <td title=\"Draws\">\n                        D\n                    </td>\n                    <td title=\"Losses\">\n                        L\n                    </td>\n                    <td title=\"Goals for\">\n                        GF\n                    </td>\n                    <td title=\"Goals against\">\n                        GA\n                    </td>\n                    <td title=\"Goals difference\">\n                        GD\n                    </td>\n                    <td title=\"Team points\">\n                        Pts\n                    </td>\n                </tr>\n                {props.children}\n            </tbody>\n        </table>\n    )\n}\n\nexport default TableBody","import React from 'react';\nimport Bundesliga from '../img/Bundesliga.png';\nimport Eredivisie from '../img/Eredivisie.png';\nimport LaLiga from '../img/LaLiga.png';\nimport Ligue1 from '../img/Ligue1.png';\nimport PremierLeague from '../img/PremierLeague.png';\nimport SerieA from '../img/SerieA.png';\n\nconst LeagueInfo = (props) => {\n    let imgSrc;\n    switch (props.leagueCaption) {\n\n        case \"Bundesliga\":\n            imgSrc = Bundesliga;\n            break;\n\n        case \"Eredivisie\":\n            imgSrc = Eredivisie;\n            break;\n\n        case \"Primera Division\":\n            imgSrc = LaLiga;\n            break;\n\n        case \"Ligue 1\":\n            imgSrc = Ligue1;\n            break;\n\n        case \"Premier League\":\n            imgSrc = PremierLeague;\n            break;\n\n        case \"Serie A\":\n            imgSrc = SerieA;\n            break;\n\n        default:\n            imgSrc = LaLiga;\n            break;\n    }\n\n    return (\n        <div className=\"league-info\">\n            <img src={imgSrc} alt=\"\" />\n        </div>\n    );\n};\n\nexport default LeagueInfo;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport Row from '../components/Row';\nimport TableBody from '../components/TableBody';\nimport LeagueInfo from '../components/LeagueInfo';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      leagueName: 'La Liga',\n      rows: [],\n      leagueId: 'PD',\n      leagues: {\n        \"La Liga\": 'PD',\n        \"Premier League\": 'PL',\n        \"Eredivisie\": 'DED',\n        \"Ligue 1\": 'FL1',\n        \"Bundesliga\": 'BL1',\n        \"Serie A\": 'SA'\n      },\n      buttons: []\n    }\n    this.handleLeagueClick = this.handleLeagueClick.bind(this);\n  }\n\n  handleLeagueClick(e) {\n    const newId = e.target.getAttribute('data-leagueid');\n    this.setState({\n      leagueId: newId\n    }, () => { this.fetchData() });\n  }\n\n  fetchData() {\n    const Token = 'd1d572ac51e742ef83c55366ee0cd6ea',\n      leagueId = this.state.leagueId,\n      URL = 'https://api.football-data.org/v2/competitions/' + leagueId + '/standings';\n\n    fetch(URL, { headers: { 'X-Auth-Token': Token } })\n      .then((response) => response.json())\n      .then((responseJson) => {\n        const rows = [];\n        responseJson.standings[0].table.map(\n          (item, index) => {\n            const { position, playedGames, won, draw, lost, goalsFor, goalsAgainst, goalDifference, points } = item;\n            const {crestUrl, name} = item.team;\n            \n            return (\n              rows.push(\n                <Row key={index} position={position} crestURI={crestUrl} teamName={name} playedGames={playedGames} wins={won} draws={draw} losses={lost} goalsFor={goalsFor} goalsAgainst={goalsAgainst} goalDifference={goalDifference} points={points} />\n              )\n            )\n          }\n        )\n        this.setState({\n          leagueName: responseJson.competition.name,\n          rows: rows\n        })\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    for (let key in this.state.leagues) {\n      this.state.buttons.push(\n        <Button handleClick={this.handleLeagueClick} key={this.state.leagues[key]} leagueId={this.state.leagues[key]} text={key} />\n      )\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"app\">\n        <Header>\n          {this.state.buttons}\n        </Header>\n        <div className=\"container\">\n          <LeagueInfo leagueCaption={this.state.leagueName} />\n          <TableBody>\n            {this.state.rows}\n          </TableBody>\n        </div>\n        <div className=\"chair\">© Created by Chair</div>\n      </div>\n    );\n    \n  }\n\n}\n\nexport default App;\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}